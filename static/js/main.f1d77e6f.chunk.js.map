{"version":3,"sources":["game/game.js","components/ContextAPI.js","components/GameOver.js","components/CardElement.js","components/GameBoard.js","MemoryGame.js","reportWebVitals.js","index.js"],"names":["cron","game","lockMode","firstCard","secondCard","logos","cards","name","moviments","time","ranking","hours","seconds","minutes","ms","setCard","id","checkMatch","this","filter","card","flipped","push","icon","clearCards","unflipCard","checkGameOver","length","pointings","gameOverLayer","document","querySelector","times","style","display","yourScore","getRanking","JSON","parse","localStorage","getItem","returnMinutes","returnSeconds","eachPlayer","setItem","stringify","innerHTML","podium","fpm","spm","tpm","fpt","spt","tpt","mov","temp","forEach","m","t","sort","a","b","inicio","nameInp","value","pauseCron","setInterval","startCron","clearInterval","restartCron","createCardFromLogos","logo","createPairFromLogo","flatMap","pair","shuffleCards","createIdFromLogo","parseInt","Math","random","currentIndex","randomIndex","floor","flipCard","cardId","gameOverCallBack","noMatchCallBack","setTimeout","ContextAPI","createContext","ContextProvider","props","useState","gameOver","setGameOver","setCards","useEffect","Provider","children","GameOver","useContext","window","location","reload","className","onClick","CardElement","handleFlip","src","alt","GameBoard","map","index","MemoryGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1d77e6f.chunk.js","sourcesContent":["/* document.addEventListener(\"DOMContentLoaded\", ()=>{\n  if(localStorage.getItem('nome') != null){\n    document.querySelector(\"#btn-inp\").value = `${localStorage.getItem('nome')}`;\n  } else{\n    document.querySelector(\"#btn-inp\").value = \"\";\n  }\n}) */\n\nlet cron;\n\nlet game = \n    {\n    lockMode: false, // paraliza a jogada para verificar se as cartas são iguais ou não\n    firstCard: null,\n    secondCard: null,\n\n    logos : [\"aliexpress\", \n    \"amazon\", \n    \"apple\", \n    \"blue-origin\",\n    \"face\",\n    \"google\",\n    \"spacex\",\n    \"target\",\n    \"tesla\",\n    \"twitter\"],\n\n    cards : [],\n\n    name : [],\n\n    moviments: [],\n\n    time : [],\n    \n    ranking : [],\n\n    hours : 0,\n    seconds : 0,\n    minutes : 0,\n    ms: 1000,\n    \n    setCard: function(id){ //'id' mostrando qual a carta a ser setada(a carta do evento 'onclick')\n      let checkMatch = this.cards.filter(card=>card.id === id)[0]; //retornando para o filter a carta com o id da carta setada\n      //console.log(checkMatch)\n\n      if(checkMatch.flipped || this.lockMode){//Se a carta do id já foi virada(flipped) ou se o lockMode é true, retornará false(ou seja, se estiver nestas condições, não irá setar(rodar))\n        return false;\n      }\n      if(!this.firstCard){ //Se a carta ñ estiver flipada ou em lockMode, irá tentar colocar na 1ª carta(firstCard) a carta do id(checkMatch). Se a 1ª carta for null, irá receber a carta\n        this.firstCard = checkMatch;\n        this.firstCard.flipped = true; //colocar como virada\n        this.moviments.push(\"*\");\n        //console.log(this.moviments);\n        return true; //carta setada\n      } else{ //Senão, colocará na 2ª carta(secondCard)\n        this.secondCard = checkMatch;// aqui está\n        this.secondCard.flipped = true;//colocar como virada\n        this.lockMode = true; // E colocará em lockMode para verificação\n        this.moviments.push(\"*\");\n        //console.log(this.moviments);\n        return true; //carta setada\n      }\n    },\n\n    checkMatch: function (){\n      if(!game.firstCard || !game.secondCard){ //Resumindo, se não tiver as duas cartas, não irá checar\n        return false;\n      }\n      return this.firstCard.icon === this.secondCard.icon//Se não tivesse o if, ao clicar na 1º carta, como ainda não temos a 2ª carta, não existe ainda a propriedade icon.\n    },\n\n    clearCards: function (){\n      this.firstCard = null;\n      this.secondCard = null;\n      this.lockMode = false;\n    },\n\n    unflipCard: function(){\n      this.firstCard.flipped = false; //Se Não der Match, desvirar a carta colocando flipped como false\n      this.secondCard.flipped = false;\n      this.clearCards(); //E limpar as cartas\n    },\n\n    checkGameOver : function (){\n      return this.cards.filter(card => !card.flipped).length === 0;\n    },\n\n    pointings : function(){\n      let gameOverLayer = document.querySelector(\"#gameOver\");\n\n      this.times();\n      gameOverLayer.style.display = \"flex\"\n    },\n\n    times: function(){\n      let yourScore = document.querySelector(\".your-score\");\n      let getRanking = JSON.parse(localStorage.getItem(\"ranking\")) || [];\n      \n      this.time.push(`${this.returnMinutes()}:${this.returnSeconds()}`);\n      \n      let eachPlayer = {moviments: this.moviments.length, name: this.name[0], time: this.time[0]};\n      //IMPORTANTE: O envio para o time(this.time.push) tem que ser antes da criação da variável 'eachPlayer', para o JS fazer a leitura do envio para time antes.\n\n      getRanking.push(eachPlayer);\n\n      if(getRanking === null){\n        localStorage.setItem(\"ranking\", JSON.stringify(getRanking))\n      } else{\n        localStorage.setItem(\"ranking\", JSON.stringify(getRanking));\n      }\n\n      yourScore.innerHTML = `Você ${this.name}, teve ${this.moviments.length} movimentos em um tempo de ${this.returnMinutes()}min e ${this.returnSeconds()}seg`;\n\n      this.podium(getRanking);\n    },\n\n    returnMinutes: function(){\n      return this.minutes < 10 ? '0' + this.minutes : this.minutes;\n    },\n    returnSeconds: function(){\n      return this.seconds < 10 ? '0' + this.seconds : this.seconds;\n    },\n\n    podium : function (getRanking){\n      let fpm = document.querySelector(\".first-position-m\");\n      let spm = document.querySelector(\".second-position-m\");\n      let tpm = document.querySelector(\".third-position-m\");\n      let fpt = document.querySelector(\".first-position-t\");\n      let spt = document.querySelector(\".second-position-t\");\n      let tpt = document.querySelector(\".third-position-t\");\n      let mov = [];\n      let temp = [];\n\n      getRanking.forEach((m)=>{\n        mov.push({name: m.name, moviments: m.moviments});\n      })\n\n      getRanking.forEach((t)=>{\n        temp.push({name: t.name, time: t.time})\n      })\n\n      mov.sort(function(a,b){ //Se 'a' for menor que 'b', o sort não acontecerá. Do contrário, irá efetuar a troca do \"a\" pelo \"b\"(efeito do sort)\n        if(a.moviments < b.moviments){\n          return -1; //Falso\n        } else{\n          return true;\n        }\n      })\n\n      temp.sort(function(a,b){\n        if(a.time < b.time){\n          return -1; //Falso\n        } else{\n          return true;\n        }\n      })\n\n      if (getRanking.length <= 1){ fpm.style.display = \"block\"\n                                  spm.style.display = \"none\"\n                                  tpm.style.display = \"none\"\n                                  fpt.style.display = \"block\"\n                                  spt.style.display = \"none\"\n                                  tpt.style.display = \"none\"\n        fpm.innerHTML = `1º - ${mov[0].name} - ${mov[0].moviments} mov`\n        fpt.innerHTML = `1º - ${temp[0].name} - ${temp[0].time} seg`};\n      if(getRanking.length === 2){ fpm.style.display = \"block\"\n                                  spm.style.display = \"block\"\n                                  tpm.style.display = \"none\"\n                                  fpt.style.display = \"block\"\n                                  spt.style.display = \"block\"\n                                  tpt.style.display = \"none\"\n        fpm.innerHTML = `1º - ${mov[0].name} - ${mov[0].moviments} mov`\n        spm.innerHTML = `2º- ${mov[1].name} - ${mov[1].moviments} mov`\n        fpt.innerHTML = `1º - ${temp[0].name} - ${temp[0].time} seg`\n        spt.innerHTML = `2º- ${temp[1].name} - ${temp[1].time} seg`};\n      if(getRanking.length >= 3){ fpm.style.display = \"block\"\n                                  spm.style.display = \"block\"\n                                  tpm.style.display = \"block\"\n                                  fpt.style.display = \"block\"\n                                  spt.style.display = \"block\"\n                                  tpt.style.display = \"block\"\n      fpm.innerHTML = `1º - ${mov[0].name} - ${mov[0].moviments} mov`\n      spm.innerHTML = `2º- ${mov[1].name} - ${mov[1].moviments} mov`\n      tpm.innerHTML = `3º - ${mov[2].name} - ${mov[2].moviments} mov`\n      fpt.innerHTML = `1º - ${temp[0].name} - ${temp[0].time} seg`\n      spt.innerHTML = `2º- ${temp[1].name} - ${temp[1].time} seg`\n      tpt.innerHTML = `3º - ${temp[2].name} - ${temp[2].time} seg`}\n    },\n\n    inicio: function(){\n      let inicio = document.querySelector(\"#inicio\");\n      let nameInp = document.querySelector(\"#btn-inp\");\n\n      this.name.push(nameInp.value);\n      localStorage.setItem(\"nome\", nameInp.value);\n      inicio.style.display = \"none\";\n      this.pauseCron();\n      cron = setInterval(()=>{this.startCron()}, this.ms);\n    },\n\n    startCron: function(){\n      this.seconds++;\n\n      if(this.seconds === 60){\n        this.seconds = 0;\n        this.minutes++;\n        if(this.minutes === 60){\n          this.minutes = 0;\n          this.hours++;\n        }\n      }\n    },\n\n    pauseCron: function(){\n      clearInterval(cron);\n    },\n\n    restartCron: function(){\n      clearInterval(cron);\n      this.seconds = 0;\n      this.minutes = 0;\n      this.hours = 0;\n    },\n    \n    createCardFromLogos: function(){\n        this.logos.forEach((logo) => {\n        this.cards.push(this.createPairFromLogo(logo));\n      });\n    \n    //  console.log(cards.flatMap(pair =>pair));//cards está recebendo do retorno, pares(2 arrays). Podemos dizer que: para cada PAIR(argumento), irá retornar algo(PAIR no caso são 2 elementos) e desmembrado pelo 'flatMap'(voltando 20 arrays. Se fosse no MAP, seria 10 arrays(10 pares))\n      this.cards = this.cards.flatMap(pair =>pair);\n    //IMPORTANTE:\n    //  MAP>>> Ele cria um novo array \n    //  FLATMAP>>> Ele desvincula/desmembra os arrays(se tiver mais de um), criando um array para cada elemento que se encontra no array original(do CARDS por ex)\n      this.shuffleCards();\n      return this.cards; //Não precisa retornar, pois na function startGame, já está pegando o cards(game.cards) e enviando para pr´xima função(initializeCards(game.cards))\n    },\n    \n    createPairFromLogo: function(logo){\n      return [{id: this.createIdFromLogo(logo), //Ao invés de enviar para outra função, pode também colcoar o retorno completo(logo + parseInt(Math.random() * 1000))\n              icon: logo,\n              flipped: false},\n              {id: this.createIdFromLogo(logo),\n                icon: logo,\n                flipped: false}]\n    },\n    \n    createIdFromLogo: function (logo){\n      return logo + parseInt(Math.random() * 1000);\n    }, \n  \n  \n    shuffleCards: function(){\n      let currentIndex = this.cards.length;\n      let randomIndex = 0;\n    \n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);//EX> randomIndex = 5\n        currentIndex--;//EX> currentIndex = 19\n    \n        [this.cards[randomIndex], this.cards[currentIndex]] = [this.cards[currentIndex], this.cards[randomIndex]];\n      //Invertendo Valores. Fazendo a troca de propriedades do array cards...EX a seguir..\n      //1ª RODADA________________________________________________________________\n      //EX> cards[randomIndex] = 5;\n      //EX> cards[currentIndex] = 19;\n      //passa a ser....(=)\n      //EX> cards[randomIndex] = 19;\n      //EX> cards[currentIndex] = 5;\n      //resumindo....\n      //ANTERIORMENTE>>>cards[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n      //AGORA É>>>>>>>>>cards[0,1,2,3,4,19,6,7,8,9,10,11,12,13,14,15,16,17,18,5]\n        //2ª RODADA________________________________________________________________\n      //EX> cards[randomIndex] = 12;\n      //EX> cards[currentIndex] = 18;\n      //passa a ser....(=)\n      //EX> cards[randomIndex] = 18;\n      //EX> cards[currentIndex] = 12;\n      //resumindo....\n      //ANTERIORMENTE>>>cards[0,1,2,3,4,19,6,7,8,9,10,11,12,13,14,15,16,17,18,5]\n      //AGORA É>>>>>>>>>cards[0,1,2,3,4,19,6,7,8,9,10,11,18,13,14,15,16,17,12,5]\n    \n      //e assim por diante.\n    \n      /* EX se fosse mudança em objetos..\n          let obj = [{a: 10}, {b: 20}]\n          [obj[0].a, obj[1].b] = [obj[1].b, obj[0].a]\n    \n          É como se estivessemos fazendo o seguinte:\n          obj[0].a = 20 // esse 20 seria o valor de obj[1].b\n          obj[1].b = 10 // esse 10 seria o valor de obj[0].a\n      */\n      }\n    },\n\n    flipCard: function(cardId, gameOverCallBack, noMatchCallBack){\n      if(this.setCard(cardId)){//vamos mandar o id da carta clicada(this.id(arg)), para o setCard que está no game(game.setCard)\n        if(this.secondCard){\n          if(this.checkMatch()){\n            this.clearCards();\n            if(this.checkGameOver()){\n              this.pauseCron();\n              setTimeout(()=>gameOverCallBack(), 500);\n              //setTimeout(()=>this.pointings(), 300);\n            }\n          } else{\n            setTimeout(()=>{  \n                this.unflipCard();//Se Não der Match, desvirar a carta colocando flipped como false e limpar as cartas\n                noMatchCallBack();\n            }, 1000);\n        }\n        }\n    }\n    }\n  }\n\nexport default game;","import React, {useState, createContext, useEffect} from 'react'\nimport game from '../game/game';\n\nexport const ContextAPI = createContext();\n\nexport function ContextProvider(props) {\n\n    const [gameOver, setGameOver] = useState(false);\n    const [cards, setCards] = useState([]);\n\n    useEffect(()=>{\n        setCards(game.createCardFromLogos());\n    }, []);\n\n/*     function handleCards(cards){\n        setCards(cards);\n    } */\n    \n    return (\n        <ContextAPI.Provider value={{gameOver, setGameOver, cards, setCards}}>\n            {props.children}\n        </ContextAPI.Provider>\n    )\n}\n","import React, {useContext} from 'react'\nimport game from '../game/game';\nimport { ContextAPI } from './ContextAPI';\n\nexport default function GameOver(props) {\n\n    const {setCards, gameOver, setGameOver} = useContext(ContextAPI);\n\n    async function handleGameOver(){\n        //game.restartCron();\n        await window.location.reload();\n        setGameOver(false);\n        setCards(game.createCardFromLogos());\n    }\n\n    return (\n    <div>{gameOver ?\n        <div id=\"gameOver\">\n            <div className=\"msg\">Jogo finalizado. Parabéns!</div>\n            <br />\n            <div className=\"your-score\"></div>\n            <br />\n            <button className=\"btn reinicio\" onClick={handleGameOver}>Jogar Novamente</button>\n        </div>\n        : <></>}\n    </div>\n    )\n}\n\n\n\n//_________________________Increment later____________________________\n\n/*             <div className=\"ranking\">\n            <div className=\"inner-box mov\">\n                <div className=\"minus-more\">Menos movimento</div>\n                <div className=\"podium first-position-m\">a</div>\n                <div className=\"podium second-position-m\">b</div>\n                <div className=\"podium third-position-m\">c</div>\n            </div>\n            <div className=\"inner-box time\">\n                <div className=\"minus-more\">Mais rápido</div>\n                <div className=\"podium first-position-t\">a</div>\n                <div className=\"podium second-position-t\">b</div>\n                <div className=\"podium third-position-t\">c</div>\n            </div>\n            </div> */","import React from 'react'\n\nexport default function CardElement(props) {\n\n    return (\n        <div onClick={()=>{props.handleFlip(props.card)}} id={props.card.id} className={props.card.flipped ? \"card flip\" : \"card\"}>\n            <div className=\"card-front\">\n                <img className=\"icon\" \n                src={`./assets/${props.card.icon}.png`} \n                alt={props.card.icon} />\n            </div>\n            <div className=\"card-back\">\n                {\"</>\"}\n            </div>\n        </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport CardElement from './CardElement'\nimport game from '../game/game';\nimport { ContextAPI } from './ContextAPI';\n\nexport default function GameBoard(props) {\n\n    const {cards, setCards, setGameOver} = useContext(ContextAPI);\n\n    function handleFlip(card){\n        game.flipCard(card.id, ()=>{setGameOver(true)}, ()=>{setCards([...game.cards])});\n        setCards([...game.cards]);\n    }\n\n    return (\n        <div id=\"gameBoard\">\n            {cards.map((card, index)=>{\n                return <CardElement handleFlip={handleFlip} key={index} card={card}></CardElement> //If didn´t have {} there´s no reason to use 'return'\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport GameOver from './components/GameOver';\nimport GameBoard from './components/GameBoard';\nimport {ContextProvider} from './components/ContextAPI';\n\nexport default function MemoryGame() {\n\n    return (\n        <div>\n            <ContextProvider>\n                <GameBoard></GameBoard>\n                <GameOver></GameOver>\n            </ContextProvider>\n        </div>\n    )\n}\n\n//_________________________Increment later____________________________\n\n//import Begin from './components/Begin';\n\n\n    //const [begin, setBegin] = useState(true);\n\n    //function handleBegin(){\n    //    setBegin(false);\n    //    setCards(game.createCardFromLogos());\n    //    setGameBoard(true);\n    //    game.startCron();\n    //}\n\n    // <Begin onHandleBegin={handleBegin} show={begin}></Begin>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MemoryGame from './MemoryGame';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MemoryGame />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}